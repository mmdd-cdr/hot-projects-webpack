{"version":3,"file":"280.js","mappings":"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","sources":["webpack://hot-projects-webpack/./src/component/IconFont.js","webpack://hot-projects-webpack/./src/hooks/useTouchBottom.js","webpack://hot-projects-webpack/./src/page/Popular/index.jsx","webpack://hot-projects-webpack/./src/asset/loading.gif"],"sourcesContent":["import * as React from \"react\";\n\nconst IconFont = ({ id, ...props }) => (\n  <svg\n    className=\"icon\"\n    width=\"1em\"\n    height=\"1em\"\n    fill=\"currentColor\"\n    overflow=\"hidden\"\n    aria-hidden=\"true\"\n    {...props}\n  >\n    <use href={`#${id}`}></use>\n  </svg>\n);\n\nexport default IconFont;\n","import { useEffect } from \"react\";\nimport { throttle } from \"lodash\";\n\nconst isTouchBottom = (callBack) => {\n  // 文档显示区域高度\n  const showHeight = window.innerHeight;\n  // 网页卷曲高度\n  const scrollTopHeight =\n    document.body.scrollTop || document.documentElement.scrollTop;\n  // 所有内容高度\n  const allHeight = document.body.scrollHeight;\n  if (allHeight <= showHeight + scrollTopHeight) {\n    callBack();\n  }\n};\n\nconst useTouchBottom = (callBack) => {\n  const handleCallBack = throttle(() => {\n    if (typeof callBack === \"function\") {\n      isTouchBottom(callBack);\n    }\n  }, 500);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleCallBack);\n    return () => {\n      window.removeEventListener(\"scroll\", handleCallBack);\n    };\n  }, []);\n};\n\nexport default useTouchBottom;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Spin, message } from \"antd\";\nimport axios from \"axios\";\nimport LazyLoad from \"react-lazyload\";\nimport \"./index.scss\";\nimport IconFont from \"@/component/IconFont\";\nimport loadingImg from '@/asset/loading.gif';\nimport useTouchBottom from \"@/hooks/useTouchBottom\";\n\nconst tabType = {\n  All:\"All\",\n  JavaScript:\"JavaScript\",\n  Ruby:\"Ruby\",\n  Java:\"Java\",\n  CSS:\"CSS\"\n}\n\nconst PopularPage = () => {\n  const _tab = sessionStorage.getItem(\"popularTab\");\n  const [tab, setTab] = useState(\n    _tab !== null ? (_tab) : (tabType.All)\n  );\n  const [tableData, setTableData] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const pageRef = useRef(1);\n  const loadingRef = useRef(false);\n  const tableDataRef = useRef([]);\n\n  useEffect(() => {\n    pageRef.current = page;\n    addNews();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page, tab]);\n\n  useEffect(() => {\n    tableDataRef.current = tableData;\n  }, [tableData]);\n\n  useEffect(() => {\n    loadingRef.current = loading;\n  }, [loading]);\n\n  // 切换tab\n  const changeTab = (tab) => {\n    if (loading) {\n      return;\n    }\n    pageRef.current = 1;\n    loadingRef.current = false;\n    tableDataRef.current = [];\n    setTab(tab);\n    sessionStorage.setItem(\"popularTab\", tab);\n    setTableData([]);\n    setLoading(false);\n    setPage(1);\n  };\n\n  // 添加列表\n  const addNews = async function () {\n    if (loading) {\n      return;\n    }\n    setLoading(true);\n    const qType = {\n      All: \"\",\n      JavaScript: \"language:javascript\",\n      Ruby: \"language:ruby\",\n      Java: \"language:java\",\n      CSS: \"language:css\",\n    };\n    try {\n      const reason = await axios({\n        method: \"get\",\n        url: \"https://api.github.com/search/repositories\",\n        params: {\n          page: pageRef.current,\n          q: \"stars:>1 \" + qType[tab],\n          sort: \"stars\",\n          order: \"desc\",\n          type: \"Repositories\",\n        },\n      });\n      let _tableData = tableDataRef.current;\n      _tableData = _tableData.concat(reason.data.items);\n      setLoading(false);\n      setTableData(_tableData);\n    } catch (e) {\n      message.error(e?.response?.data?.message);\n    }\n  };\n\n  //渲染菜单\n  const renderMenu = () => {\n    let renderMenuList = [];\n    for (let innertype in tabType) {\n      renderMenuList.push(\n        <div\n          onClick={() => {\n            changeTab(innertype);\n          }}\n          className={`popular-menu-item ${tab === innertype ? \"active\" : \"\"}`}\n        >\n          {innertype}\n        </div>\n      );\n    }\n    return renderMenuList;\n  };\n\n  //无限加载\n  useTouchBottom(() => {\n    setPage(pageRef.current + 1);\n  });\n\n  // 根据tableData渲染列表数据\n  const renderTableItem = () => {\n    return tableData.map((item, index) => {\n      return (\n        <div className=\"popular-content-item\" key={index}>\n          <div className=\"item-index\">#{index + 1}</div>\n          <LazyLoad\n            className=\"item-image-lazy\"\n            placeholder={\n              <img\n                className=\"item-image\"\n                src={loadingImg}\n                alt={item.owner.login}\n              />\n            }\n          >\n            <img\n              className=\"item-image\"\n              src={item.owner.avatar_url}\n              alt={item.owner.login}\n            />\n          </LazyLoad>\n          <a\n            className=\"item-fullName\"\n            href={item.clone_url}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {item.full_name}\n          </a>\n          <div className=\"item-text\">\n            {/* 账号account */}\n            <div className=\"item-text-child\">\n              <div className=\"icon\">\n                <IconFont className=\"icon-account\" id=\"icon-account\" />\n              </div>\n              <a\n                className=\"item-name item-text-info\"\n                href={item.clone_url}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                {item.full_name}\n              </a>\n            </div>\n            {/* 有多少start */}\n            <div className=\"item-text-child\">\n              <div className=\"icon\">\n                <IconFont className=\"icon-start\" id=\"icon-start\" />\n              </div>\n              <div className=\"item-text-info\">\n                {item.stargazers_count} stars\n              </div>\n            </div>\n            {/* 有多少fork */}\n            <div className=\"item-text-child\">\n              <div className=\"icon\">\n                <IconFont className=\"icon-fork\" id=\"icon-fork\" />\n              </div>\n              <div className=\"item-text-info\">{item.forks} forks</div>\n            </div>\n            {/* 有多少issue */}\n            <div className=\"item-text-child\">\n              <div className=\"icon\">\n                <IconFont className=\"icon-issues\" id=\"icon-issues\" />\n              </div>\n              <div className=\"item-text-info\">\n                {item.open_issues_count} Open issues\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className=\"popular\">\n      <div className=\"popular-menu\">{renderMenu()}</div>\n      <div className=\"popular-content\">{renderTableItem()}</div>\n      {\n        <Spin>\n          <div className=\"loading\"></div>\n        </Spin>\n      }\n    </div>\n  );\n};\n\nexport default PopularPage;\n","export default __webpack_public_path__ + \"images/loading.gif\";"],"names":["id","props","className","width","height","fill","overflow","href","tabType","All","JavaScript","Ruby","Java","CSS","_tab","sessionStorage","getItem","tab","setTab","useState","tableData","setTableData","page","setPage","loading","setLoading","pageRef","useRef","loadingRef","tableDataRef","useEffect","current","addNews","changeTab","setItem","async","qType","reason","axios","method","url","params","q","sort","order","type","_tableData","concat","data","items","e","message","response","callBack","handleCallBack","throttle","showHeight","window","innerHeight","scrollTopHeight","document","body","scrollTop","documentElement","scrollHeight","isTouchBottom","addEventListener","removeEventListener","useTouchBottom","renderMenuList","innertype","push","onClick","renderMenu","map","item","index","key","placeholder","src","loadingImg","alt","owner","login","avatar_url","clone_url","target","rel","full_name","IconFont","stargazers_count","forks","open_issues_count"],"sourceRoot":""}