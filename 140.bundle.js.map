{"version":3,"file":"140.bundle.js","mappings":"8XAEA,MAcA,EAdiB,EAAGA,GAAAA,KAAOC,KACzB,yBACEC,UAAU,OACVC,MAAM,MACNC,OAAO,MACPC,KAAK,eACLC,SAAS,SACT,cAAY,QACRL,GAEJ,uBAAKM,KAAO,IAAGP,Q,0ICHnB,MAAMQ,EACO,YADPA,EAEO,YAsGb,EAnGmB,KACjB,MAAMC,GAAaC,EAAAA,EAAAA,QAAO,IACpBC,GAAaD,EAAAA,EAAAA,QAAO,KACnBE,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KACpCC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,IACrCG,GAAWC,EAAAA,EAAAA,MAeXC,EAAgBC,IAChBA,IAASZ,EACPC,EAAWY,SACbR,EAAaJ,EAAWY,SACxBZ,EAAWY,QAAU,IAErBC,EAAAA,GAAAA,MAAc,YAGZX,EAAWU,SACbL,EAAaL,EAAWU,SACxBV,EAAWU,QAAU,IAErBC,EAAAA,GAAAA,MAAc,aAMdC,EAAe,CAACC,EAAQC,IACrB,uBAAKvB,UAAU,iBACpB,uBAAKA,UAAU,sBACb,gBAAC,KAAD,CAAUwB,YAAa,uBAAKxB,UAAU,aAAayB,IAAKC,EAAAA,EAAYC,IAAI,YACtE,uBAAKF,IAAM,sBAAqBH,iBAAuBK,IAAI,YAE7D,uBAAK3B,UAAU,eAAgBsB,IAEjC,gBAAC,IAAD,CAAmBM,QAAS,IAnCbN,CAAAA,IACbA,IAAWhB,EACbK,EAAa,IAEbG,EAAa,KA+BqBe,CAAUN,GAAcvB,UAAU,wBAIxE,OAAO,uBAAKA,UAAU,UACpB,uBAAKA,UAAU,gBAAf,gBACA,uBAAKA,UAAU,eACb,uBAAKA,UAAU,oBACb,uBAAKA,UAAU,kBAAf,oBACA,uBAAKA,UAAU,uBACb,gBAAC,IAAD,CAAUF,GAAG,iBAGjB,uBAAKE,UAAU,oBACb,uBAAKA,UAAU,kBAAf,UACA,uBAAKA,UAAU,yBACb,gBAAC,IAAD,CAAUF,GAAG,kBAGjB,uBAAKE,UAAU,oBACb,uBAAKA,UAAU,kBAAf,kBACA,uBAAKA,UAAU,yBACb,gBAAC,IAAD,CAAUF,GAAG,mBAInB,uBAAKE,UAAU,iBACb,uBAAKA,UAAU,uBAAf,WACA,uBAAKA,UAAU,yBACZU,EAAYW,EAAaX,EAAWJ,GAAwB,uBAAKN,UAAU,8BAC1E,uBAAKA,UAAU,sBAAf,cACA,uBAAKA,UAAU,qBACb,gBAAC,IAAD,CAAO8B,aAAc,IAAMb,EAAaX,GAAuByB,SAAWC,GAAMzB,EAAWY,QAAUa,EAAEC,OAAOC,MAAOlC,UAAU,0BAA0BwB,YAAY,oBACrK,gBAAC,IAAD,CAAQI,QAAS,IAAMX,EAAaX,IAApC,YAIHO,EAAYQ,EAAaR,EAAWP,GAAwB,uBAAKN,UAAU,8BAC1E,uBAAKA,UAAU,sBAAf,cACA,uBAAKA,UAAU,qBACb,gBAAC,IAAD,CAAO8B,aAAc,IAAMb,EAAaX,GAAuByB,SAAWC,GAAMvB,EAAWU,QAAUa,EAAEC,OAAOC,MAAOlC,UAAU,0BAA0BwB,YAAY,oBACrK,gBAAC,IAAD,CAAQI,QAAS,IAAMX,EAAaX,IAApC,aAIN,uBAAKN,UAAU,gBAAgBmC,MAAOzB,GAAaG,EAAY,GAAK,CAAEuB,WAAY,WAChF,gBAAC,IAAD,CAAQC,KAAK,UAAUT,QAAS,KArFpCb,EAAU,kBAAiBL,KAAaG,OAqFpC,e,gCC3GR,QAAe,IAA0B","sources":["webpack://hot-projects-webpack/./src/component/IconFont.js","webpack://hot-projects-webpack/./src/page/Battle/index.jsx","webpack://hot-projects-webpack/./src/asset/loading.gif"],"sourcesContent":["import * as React from \"react\";\n\nconst IconFont = ({ id, ...props }) => (\n  <svg\n    className=\"icon\"\n    width=\"1em\"\n    height=\"1em\"\n    fill=\"currentColor\"\n    overflow=\"hidden\"\n    aria-hidden=\"true\"\n    {...props}\n  >\n    <use href={`#${id}`}></use>\n  </svg>\n);\n\nexport default IconFont;\n","import React, { useState, useRef } from \"react\";\nimport IconFont from \"@/component/IconFont\";\nimport { CloseCircleFilled } from '@ant-design/icons';\nimport { Input, Button, message } from 'antd';\nimport { useNavigate } from \"react-router-dom\";\nimport './index.scss';\nimport loadingImg from '@/asset/loading.gif';\nimport LazyLoad from 'react-lazyload';\n\nconst playerType = {\n  playerOne: \"playerOne\",\n  playerTwo: \"playerTwo\"\n}\n\nconst BattlePage = () => {\n  const _playerOne = useRef(\"\");\n  const _playerTwo = useRef(\"\");\n  const [playerOne, setPlayerOne] = useState(\"\");\n  const [playerTwo, setPlayerTwo] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = () => {\n    navigate(`/battle/result/${playerOne}/${playerTwo}`);\n  }\n\n  // 清空player\n  const clearPlay = (player) => {\n    if (player === playerType.playerOne) {\n      setPlayerOne(\"\")\n    } else {\n      setPlayerTwo(\"\")\n    }\n  }\n\n  const submitPlayer = (play) => {\n    if (play === playerType.playerOne) {\n      if (_playerOne.current) {\n        setPlayerOne(_playerOne.current);\n        _playerOne.current = \"\";\n      } else {\n        message.error('请先填写后再提交')\n      }\n    } else {\n      if (_playerTwo.current) {\n        setPlayerTwo(_playerTwo.current);\n        _playerTwo.current = \"\";\n      } else {\n        message.error('请先填写后再提交')\n      }\n    }\n  }\n\n  // 渲染player\n  const renderPlayer = (player, _playerType) => {\n    return <div className=\"render-player\" >\n      <div className=\"render-player-data\" >\n        <LazyLoad placeholder={<img className=\"item-image\" src={loadingImg} alt=\"player\" />} >\n          <img src={`https://github.com/${player}.png?size=200`} alt=\"player\" />\n        </LazyLoad>\n        <div className=\"player-name\" >{player}</div>\n      </div>\n      <CloseCircleFilled onClick={() => clearPlay(_playerType)} className=\"render-player-icon\" />\n    </div>\n  }\n\n  return <div className=\"battle\" >\n    <div className=\"battle-title\" >Instructions</div>\n    <div className=\"battle-step\" >\n      <div className=\"battle-step-item\" >\n        <div className=\"step-item-name\" >Enter two Github</div>\n        <div className=\"step-item-icon-user\" >\n          <IconFont id=\"icon-users\" />\n        </div>\n      </div>\n      <div className=\"battle-step-item\" >\n        <div className=\"step-item-name\" >Battle</div>\n        <div className=\"step-item-icon-battle\" >\n          <IconFont id=\"icon-battle\" />\n        </div>\n      </div>\n      <div className=\"battle-step-item\" >\n        <div className=\"step-item-name\" >See the winner</div>\n        <div className=\"step-item-icon-winner\" >\n          <IconFont id=\"icon-winner\" />\n        </div>\n      </div>\n    </div>\n    <div className=\"battle-player\" >\n      <div className=\"battle-player-title\" >Players</div>\n      <div className=\"battle-player-context\" >\n        {playerOne ? renderPlayer(playerOne, playerType.playerOne) : <div className=\"battle-player-context-item\" >\n          <div className=\"context-item-title\" >Player One</div>\n          <div className=\"context-item-data\" >\n            <Input onPressEnter={() => submitPlayer(playerType.playerOne)} onChange={(e) => _playerOne.current = e.target.value} className=\"context-item-data-input\" placeholder=\"github username\" />\n            <Button onClick={() => submitPlayer(playerType.playerOne)} >Submit</Button>\n          </div>\n        </div>}\n\n        {playerTwo ? renderPlayer(playerTwo, playerType.playerTwo) : <div className=\"battle-player-context-item\" >\n          <div className=\"context-item-title\" >Player Two</div>\n          <div className=\"context-item-data\" >\n            <Input onPressEnter={() => submitPlayer(playerType.playerTwo)} onChange={(e) => _playerTwo.current = e.target.value} className=\"context-item-data-input\" placeholder=\"github username\" />\n            <Button onClick={() => submitPlayer(playerType.playerTwo)} >Submit</Button>\n          </div>\n        </div>}\n      </div>\n      <div className=\"battle-button\" style={playerOne && playerTwo ? {} : { visibility: 'hidden' }} >\n        <Button type=\"primary\" onClick={() => handleSubmit()} >Battle</Button>\n      </div>\n    </div>\n  </div>\n}\n\nexport default BattlePage;","export default __webpack_public_path__ + \"images/loading.gif\";"],"names":["id","props","className","width","height","fill","overflow","href","playerType","_playerOne","useRef","_playerTwo","playerOne","setPlayerOne","useState","playerTwo","setPlayerTwo","navigate","useNavigate","submitPlayer","play","current","message","renderPlayer","player","_playerType","placeholder","src","loadingImg","alt","onClick","clearPlay","onPressEnter","onChange","e","target","value","style","visibility","type"],"sourceRoot":""}