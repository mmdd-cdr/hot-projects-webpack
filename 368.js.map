{"version":3,"file":"368.js","mappings":"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","sources":["webpack://hot-projects-webpack/./src/component/IconFont.js","webpack://hot-projects-webpack/./src/page/Battle/BattleDetail/index.scss?6c43","webpack://hot-projects-webpack/./src/page/Battle/BattleDetail/index.jsx","webpack://hot-projects-webpack/./src/asset/loading.gif"],"sourcesContent":["import * as React from \"react\";\n\n// eslint-disable-next-line react/prop-types\nfunction IconFont({ id, className }) {\n  return (\n    <svg\n      className={`icon ${className}`}\n      width=\"1em\"\n      height=\"1em\"\n      fill=\"currentColor\"\n      overflow=\"hidden\"\n      aria-hidden=\"true\"\n    >\n      <use href={`#${id}`} />\n    </svg>\n  );\n}\n\nexport default IconFont;\n","// extracted by mini-css-extract-plugin\nexport default {\"battleDetail\":\"battleDetail_wFEXC\",\"battleCard\":\"battleCard_Bj9ff\",\"battleCardItem\":\"battleCardItem_OUXP0\",\"battleCardItemTitle\":\"battleCardItemTitle__5jvp\",\"battleCardItemImg\":\"battleCardItemImg_IIJGy\",\"battleCardItemScores\":\"battleCardItemScores_Z8Vwu\",\"battleCardItemName\":\"battleCardItemName_k6uvl\",\"battleCardItemRow\":\"battleCardItemRow_EaVoQ\",\"rowIcon\":\"rowIcon_yuJaW\",\"resetButton\":\"resetButton_Zyufm\"};","import React, { useEffect, useState } from \"react\";\nimport { Button, Spin } from \"antd\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport styles from \"./index.scss\";\nimport axios from \"axios\";\nimport IconFont from \"@/component/IconFont\";\nimport LazyLoad from \"react-lazyload\";\nimport loadingImg from \"@/asset/loading.gif\";\n\nconst BattleDetail = () => {\n  const params = useParams();\n  const [battleData, setBattleData] = useState({\n    playerOne: {},\n    playerTwo: {},\n  });\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const getData = async () => {\n      setLoading(true);\n      const playerOneData = await getUserData(params.playerOne);\n      const playerTwoData = await getUserData(params.playerTwo);\n      let _playerData = {\n        playerOne: {},\n        playerTwo: {},\n      };\n      _playerData.playerOne = playerOneData;\n      _playerData.playerTwo = playerTwoData;\n      setBattleData(_playerData);\n      setLoading(false);\n    };\n    getData();\n  }, []);\n\n  //  根据id获取用户信息\n  const getUserData = async (id) => {\n    const reason = await axios({\n      method: \"get\",\n      url: `https://api.github.com/users/${id}`,\n    });\n    return reason.data;\n  };\n\n  const goBack = () => {\n    sessionStorage.clear();\n    navigate(-1);\n  };\n\n  return (\n    <div className={styles.battleDetail}>\n      <Spin spinning={loading}>\n        <div className={styles.battleCard}>\n          <div className={styles.battleCardItem}>\n            <div className={styles.battleCardItemTitle}>\n              {battleData.playerOne.public_repos >=\n              battleData.playerTwo.public_repos\n                ? \"Winner\"\n                : \"Loser\"}\n            </div>\n            <LazyLoad\n              placeholder={\n                <img\n                  className={styles.battleCardItemImg}\n                  src={loadingImg}\n                  alt=\"player\"\n                />\n              }\n            >\n              <img\n                className={styles.battleCardItemImg}\n                src={battleData.playerOne.avatar_url}\n                alt=\"github\"\n              />\n            </LazyLoad>\n            <div className={styles.battleCardItemScores}>\n              Scores: {battleData.playerOne.public_repos}\n            </div>\n            <div className={styles.battleCardItemName}>\n              {battleData.playerOne.name}\n            </div>\n            <div className={styles.battleCardItemRow}>\n              <IconFont className={styles.rowIcon} id=\"icon-cursor\" />\n              <div>{battleData.playerOne.location}</div>\n            </div>\n            <div className={styles.battleCardItemRow}>\n              <IconFont className={styles.rowIcon} id=\"icon-users\" />\n              <div>{battleData.playerOne.followers}</div>\n            </div>\n            <div className={styles.battleCardItemRow}>\n              <IconFont className={styles.rowIcon} id=\"icon-personadd\" />\n              <div>{battleData.playerOne.public_gists}</div>\n            </div>\n            <div className={styles.battleCardItemRow}>\n              <IconFont className={styles.rowIcon} id=\"icon-code\" />\n              <div>{battleData.playerOne.public_repos}</div>\n            </div>\n          </div>\n          <div className={styles.battleCardItem}>\n            <div className={styles.battleCardItemTitle}>\n              {battleData.playerOne.public_repos <\n              battleData.playerTwo.public_repos\n                ? \"Winner\"\n                : \"Loser\"}\n            </div>\n            <LazyLoad\n              placeholder={\n                <img\n                  className={styles.battleCardItemImg}\n                  src={loadingImg}\n                  alt=\"player\"\n                />\n              }\n            >\n              <img\n                className={styles.battleCardItemImg}\n                src={battleData.playerTwo.avatar_url}\n                alt=\"github\"\n              />\n            </LazyLoad>\n            <div className={styles.battleCardItemScores}>\n              Scores: {battleData.playerTwo.public_repos}\n            </div>\n            <div className={styles.battleCardItemName}>\n              {battleData.playerTwo.name}\n            </div>\n            <div className={styles.battleCardItemRow}>\n              <IconFont className={styles.rowIcon} id=\"icon-cursor\" />\n              <div>{battleData.playerTwo.location}</div>\n            </div>\n            <div className={styles.battleCardItemRow}>\n              <IconFont className={styles.rowIcon} id=\"icon-users\" />\n              <div>{battleData.playerTwo.followers}</div>\n            </div>\n            <div className={styles.battleCardItemRow}>\n              <IconFont className={styles.rowIcon} id=\"icon-personadd\" />\n              <div>{battleData.playerTwo.public_gists}</div>\n            </div>\n            <div className={styles.battleCardItemRow}>\n              <IconFont className={styles.rowIcon} id=\"icon-code\" />\n              <div>{battleData.playerTwo.public_repos}</div>\n            </div>\n          </div>\n        </div>\n        <div className={styles.resetButton}>\n          <Button onClick={goBack}>Reset</Button>\n        </div>\n      </Spin>\n    </div>\n  );\n};\n\nexport default BattleDetail;\n","export default __webpack_public_path__ + \"images/loading.gif\";"],"names":["id","className","width","height","fill","overflow","href","params","useParams","battleData","setBattleData","useState","playerOne","playerTwo","loading","setLoading","navigate","useNavigate","useEffect","async","playerOneData","getUserData","playerTwoData","_playerData","getData","axios","method","url","data","styles","spinning","public_repos","placeholder","src","loadingImg","alt","avatar_url","name","IconFont","location","followers","public_gists","onClick","sessionStorage","clear"],"sourceRoot":""}