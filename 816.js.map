{"version":3,"file":"816.js","mappings":"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","sources":["webpack://hot-projects-webpack/./src/component/IconFont.js","webpack://hot-projects-webpack/./src/page/Battle/index.scss?6dd0","webpack://hot-projects-webpack/./src/page/Battle/index.jsx","webpack://hot-projects-webpack/./src/asset/loading.gif"],"sourcesContent":["import * as React from \"react\";\n\n// eslint-disable-next-line react/prop-types\nfunction IconFont({ id, className }) {\n  return (\n    <svg\n      className={`icon ${className}`}\n      width=\"1em\"\n      height=\"1em\"\n      fill=\"currentColor\"\n      overflow=\"hidden\"\n      aria-hidden=\"true\"\n    >\n      <use href={`#${id}`} />\n    </svg>\n  );\n}\n\nexport default IconFont;\n","// extracted by mini-css-extract-plugin\nexport default {\"battle\":\"battle_uKHvq\",\"battleTitle\":\"battleTitle_B1PsA\",\"battleStep\":\"battleStep_FbMvw\",\"battleStepItem\":\"battleStepItem_r59St\",\"stepItemName\":\"stepItemName_qadIG\",\"stepItemIcon\":\"stepItemIcon_m8RS0\",\"stepItemIconUser\":\"stepItemIconUser_M2oeI\",\"stepItemIconBattle\":\"stepItemIconBattle_jSMIa\",\"stepItemIconWinner\":\"stepItemIconWinner_q9DfQ\",\"battlePlayer\":\"battlePlayer_WZraS\",\"battlePlayerTitle\":\"battlePlayerTitle_AWQPp\",\"battlePlayerContext\":\"battlePlayerContext_hjBTe\",\"battlePlayerContextItem\":\"battlePlayerContextItem_cSsqP\",\"contextItemTitle\":\"contextItemTitle_On164\",\"contextItemData\":\"contextItemData_AKSKC\",\"ant-btn\":\"ant-btn_Rcn1r\",\"contextItemDataInput\":\"contextItemDataInput_cdrQL\",\"renderPlayer\":\"renderPlayer_X8ZrH\",\"renderPlayerData\":\"renderPlayerData_GjFfJ\",\"itemImage\":\"itemImage_D16mr\",\"playerName\":\"playerName_LmhKp\",\"renderPlayerIcon\":\"renderPlayerIcon_sXGb9\",\"battleButton\":\"battleButton_lrSpd\"};","import React, { useState, useRef } from \"react\";\nimport IconFont from \"@/component/IconFont\";\nimport { CloseCircleFilled } from \"@ant-design/icons\";\nimport { Input, Button, message } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./index.scss\";\nimport loadingImg from \"@/asset/loading.gif\";\nimport LazyLoad from \"react-lazyload\";\n\nconst playerType = {\n  playerOne: \"playerOne\",\n  playerTwo: \"playerTwo\",\n};\n\nconst BattlePage = () => {\n  const _playerOne = useRef(\"\");\n  const _playerTwo = useRef(\"\");\n  const [playerOne, setPlayerOne] = useState(\"\");\n  const [playerTwo, setPlayerTwo] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = () => {\n    navigate(`/battle/result/${playerOne}/${playerTwo}`);\n  };\n\n  // 清空player\n  const clearPlay = (player) => {\n    if (player === playerType.playerOne) {\n      setPlayerOne(\"\");\n    } else {\n      setPlayerTwo(\"\");\n    }\n  };\n\n  const submitPlayer = (play) => {\n    if (play === playerType.playerOne) {\n      if (_playerOne.current) {\n        setPlayerOne(_playerOne.current);\n        _playerOne.current = \"\";\n      } else {\n        message.error(\"请先填写后再提交\");\n      }\n    } else {\n      if (_playerTwo.current) {\n        setPlayerTwo(_playerTwo.current);\n        _playerTwo.current = \"\";\n      } else {\n        message.error(\"请先填写后再提交\");\n      }\n    }\n  };\n\n  // 渲染player\n  const renderPlayer = (player, _playerType) => {\n    return (\n      <div className={styles.renderPlayer}>\n        <div className={styles.renderPlayerData}>\n          <LazyLoad\n            placeholder={\n              <img className={styles.itemImage} src={loadingImg} alt=\"player\" />\n            }\n          >\n            <img\n              src={`https://github.com/${player}.png?size=200`}\n              alt=\"player\"\n            />\n          </LazyLoad>\n          <div className={styles.playerName}>{player}</div>\n        </div>\n        <CloseCircleFilled\n          onClick={() => clearPlay(_playerType)}\n          className={styles.renderPlayerIcon}\n        />\n      </div>\n    );\n  };\n\n  return (\n    <div className={styles.battle}>\n      <div className={styles.battleTitle}>Instructions</div>\n      <div className={styles.battleStep}>\n        <div className={styles.battleStepItem}>\n          <div className={styles.stepItemName}>Enter two Github</div>\n          <div className={styles.stepItemIconUser}>\n            <IconFont id=\"icon-users\" />\n          </div>\n        </div>\n        <div className={styles.battleStepItem}>\n          <div className={styles.stepItemName}>Battle</div>\n          <div className={styles.stepItemIconBattle}>\n            <IconFont id=\"icon-battle\" />\n          </div>\n        </div>\n        <div className={styles.battleStepItem}>\n          <div className={styles.stepItemName}>See the winner</div>\n          <div className={styles.stepItemIconWinner}>\n            <IconFont id=\"icon-winner\" />\n          </div>\n        </div>\n      </div>\n      <div className={styles.battlePlayer}>\n        <div className={styles.battlePlayerTitle}>Players</div>\n        <div className={styles.battlePlayerContext}>\n          {playerOne ? (\n            renderPlayer(playerOne, playerType.playerOne)\n          ) : (\n            <div className={styles.battlePlayerContextItem}>\n              <div className={styles.contextItemTitle}>Player One</div>\n              <div className={styles.contextItemData}>\n                <Input\n                  onPressEnter={() => submitPlayer(playerType.playerOne)}\n                  onChange={(e) => (_playerOne.current = e.target.value)}\n                  className={styles.contextItemDataInput}\n                  placeholder=\"github username\"\n                />\n                <Button onClick={() => submitPlayer(playerType.playerOne)}>\n                  Submit\n                </Button>\n              </div>\n            </div>\n          )}\n\n          {playerTwo ? (\n            renderPlayer(playerTwo, playerType.playerTwo)\n          ) : (\n            <div className={styles.battlePlayerContextItem}>\n              <div className={styles.contextItemTitle}>Player Two</div>\n              <div className={styles.contextItemData}>\n                <Input\n                  onPressEnter={() => submitPlayer(playerType.playerTwo)}\n                  onChange={(e) => (_playerTwo.current = e.target.value)}\n                  className={styles.contextItemDataInput}\n                  placeholder=\"github username\"\n                />\n                <Button onClick={() => submitPlayer(playerType.playerTwo)}>\n                  Submit\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n        <div\n          className={styles.battleButton}\n          style={playerOne && playerTwo ? {} : { visibility: \"hidden\" }}\n        >\n          <Button type=\"primary\" onClick={() => handleSubmit()}>\n            Battle\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BattlePage;\n","export default __webpack_public_path__ + \"images/loading.gif\";"],"names":["id","className","width","height","fill","overflow","href","playerType","_playerOne","useRef","_playerTwo","playerOne","setPlayerOne","useState","playerTwo","setPlayerTwo","navigate","useNavigate","submitPlayer","play","current","message","renderPlayer","player","_playerType","styles","placeholder","src","loadingImg","alt","CloseCircleFilled","onClick","clearPlay","IconFont","onPressEnter","onChange","e","target","value","style","visibility","type"],"sourceRoot":""}